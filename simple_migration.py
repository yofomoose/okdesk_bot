#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ü—Ä–æ—Å—Ç–∞—è –º–∏–≥—Ä–∞—Ü–∏—è: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è portal_token —Å –ø–æ–º–æ—â—å—é SQLAlchemy
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

from sqlalchemy import Column, String, text
from models.database import engine, Base

def add_portal_token_column():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–ª–æ–Ω–∫—É portal_token –≤ —Ç–∞–±–ª–∏—Ü—É users"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∫–æ–ª–æ–Ω–∫–∞
        with engine.connect() as conn:
            try:
                result = conn.execute(text("PRAGMA table_info(users)"))
                columns = [row[1] for row in result.fetchall()]

                if 'portal_token' in columns:
                    print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ portal_token —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                    return

                # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É –¥–ª—è SQLite
                conn.execute(text("ALTER TABLE users ADD COLUMN portal_token VARCHAR(255)"))
                conn.commit()

                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ portal_token —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞")

            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å SQLite: {e}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–ª–æ–Ω–∫–∏: {e}")

if __name__ == "__main__":
    print("üîÑ –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ—Å—Ç—É—é –º–∏–≥—Ä–∞—Ü–∏—é: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ portal_token...")
    add_portal_token_column()
    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")