#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
import json
import asyncio
import logging
from pprint import pprint
import config
from services.okdesk_api import OkdeskAPI

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
)
logger = logging.getLogger(__name__)


async def verify_deployment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä API –∫–ª–∏–µ–Ω—Ç–∞
    api = OkdeskAPI()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å API
    logger.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    issues = await api.get_issues(limit=1)
    
    if not issues:
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API.")
        return False
    
    logger.info("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å API —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
    logger.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É...")
    test_phone = "+79133446565"  # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    
    contact = await api.find_contact_by_phone(test_phone)
    
    if not contact:
        logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É: {test_phone}")
        logger.error("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –º–µ—Ç–æ–¥–∞ find_contact_by_phone")
        return False
    
    logger.info(f"‚úÖ –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ù–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–∞–∫—Ç: {contact.get('name', '–ë–µ–∑ –∏–º–µ–Ω–∏')}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É
    logger.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ —Å –ø—Ä–∏–≤—è–∑–∫–æ–π –∫–ª–∏–µ–Ω—Ç–∞...")
    
    title = "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"
    description = "–≠—Ç–∞ –∑–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    
    response = await api.create_issue(
        title=title,
        description=description,
        contact_id=contact['id']
    )
    
    if not response or 'id' not in response:
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É")
        logger.error(f"–û—Ç–≤–µ—Ç API: {response}")
        return False
    
    issue_id = response['id']
    logger.info(f"‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å ID: {issue_id}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞—è–≤–∫–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–≤—è–∑–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞
    issue = await api.get_issue(issue_id)
    
    if not issue:
        logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ {issue_id}")
        return False
    
    client_info = issue.get('client', {})
    if not client_info:
        logger.warning("‚ö†Ô∏è –ö–ª–∏–µ–Ω—Ç –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∑–∞—è–≤–∫–µ –≤ –æ—Ç–≤–µ—Ç–µ API")
    else:
        contact_info = client_info.get('contact', {})
        if contact_info and contact_info.get('id') == contact['id']:
            logger.info("‚úÖ –ü—Ä–∏–≤—è–∑–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ –∫ –∑–∞—è–≤–∫–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            logger.warning("‚ö†Ô∏è –ü—Ä–∏–≤—è–∑–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ –∫ –∑–∞—è–≤–∫–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞—è–≤–∫–µ
    logger.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è...")
    
    comment_text = "–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º author_id –∏ author_type
    comment_response = await api.add_comment(
        issue_id=issue_id,
        content=comment_text,
        author_id=contact['id'],
        author_type="contact"
    )
    
    if comment_response and ('id' in comment_response or 'success' in comment_response):
        logger.info("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º –∞–≤—Ç–æ—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º –∞–≤—Ç–æ—Ä–∞")
        logger.error(f"–û—Ç–≤–µ—Ç API: {comment_response}")
    
    # –ó–∞—Ç–µ–º –ø—Ä–æ–±—É–µ–º —Ç–æ–ª—å–∫–æ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    comment_response2 = await api.add_comment(
        issue_id=issue_id,
        content=f"{comment_text} (—Ç–µ—Å—Ç —Å —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º)",
        client_phone=test_phone
    )
    
    if comment_response2 and ('id' in comment_response2 or 'success' in comment_response2):
        logger.info("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        logger.info("‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –£–°–ü–ï–®–ù–û –†–ê–ó–í–ï–†–ù–£–¢–û –ò –†–ê–ë–û–¢–ê–ï–¢")
        return True
    else:
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
        logger.error(f"–û—Ç–≤–µ—Ç API: {comment_response2}")
        return False


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    success = await verify_deployment()
    
    if success:
        logger.info("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        logger.error("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º")


if __name__ == "__main__":
    asyncio.run(main())
