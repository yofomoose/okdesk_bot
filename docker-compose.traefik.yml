version: '3.8'

services:
  # Telegram Bot
  okdesk_bot:
    build: .
    restart: unless-stopped
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - OKDESK_API_URL=${OKDESK_API_URL}
      - OKDESK_API_TOKEN=${OKDESK_API_TOKEN}
      - DATABASE_URL=${DATABASE_URL}
      - ADMIN_IDS=${ADMIN_IDS}
    volumes:
      - bot_data:/app/data
    depends_on:
      - okdesk_webhook
    networks:
      - okdesk_network

  # Webhook Server с метками для Traefik
  okdesk_webhook:
    build: .
    restart: unless-stopped
    command: python webhook_server.py
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - OKDESK_API_URL=${OKDESK_API_URL}
      - OKDESK_API_TOKEN=${OKDESK_API_TOKEN}
      - WEBHOOK_PATH=${WEBHOOK_PATH}
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
      - DATABASE_URL=${DATABASE_URL}
      - HOST=0.0.0.0
      - PORT=8000
    volumes:
      - bot_data:/app/data
    networks:
      - okdesk_network
      - n8n_default  # Подключаемся к сети Traefik
    expose:
      - "8000"
    labels:
      # Метки для Traefik
      - "traefik.enable=true"
      - "traefik.http.routers.okdesk-webhook.rule=Host(`okbot.teftelyatun.ru`)"
      - "traefik.http.routers.okdesk-webhook.tls=true"
      - "traefik.http.routers.okdesk-webhook.tls.certresolver=letsencrypt"
      - "traefik.http.services.okdesk-webhook.loadbalancer.server.port=8000"
      - "traefik.docker.network=n8n_default"

volumes:
  bot_data:

networks:
  okdesk_network:
    driver: bridge
  n8n_default:
    external: true  # Используем существующую сеть от n8n
