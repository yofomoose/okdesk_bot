#!/bin/bash

# üîß –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Okdesk Bot
# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT_DIR="/opt/okdesk_bot"
DOCKER_COMPOSE_FILE="docker-compose.traefik.yml"
BOT_CONTAINER="okdesk_bot_okdesk_bot_1"
WEBHOOK_CONTAINER="okdesk_bot_okdesk_webhook_1"

echo -e "${BLUE}ü§ñ Okdesk Bot Management Script${NC}"
echo -e "${CYAN}================================${NC}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if ! command -v git &> /dev/null; then
        error "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    log "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
update_code() {
    log "üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ GitHub..."
    
    cd "$PROJECT_DIR"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if [ -n "$(git status --porcelain)" ]; then
        warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –°–æ—Ö—Ä–∞–Ω—è–µ–º..."
        git stash push -m "Auto-stash before update $(date)"
    fi
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
    git fetch origin
    git pull origin master
    
    log "‚úÖ –ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω"
}

# –°–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
build_containers() {
    log "üèóÔ∏è –°–±–æ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    cd "$PROJECT_DIR"
    docker-compose -f "$DOCKER_COMPOSE_FILE" build --no-cache
    
    log "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Å–æ–±—Ä–∞–Ω—ã"
}

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
start_containers() {
    log "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    cd "$PROJECT_DIR"
    docker-compose -f "$DOCKER_COMPOSE_FILE" up -d
    
    log "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
stop_containers() {
    log "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    cd "$PROJECT_DIR"
    docker-compose -f "$DOCKER_COMPOSE_FILE" down
    
    log "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
restart_containers() {
    log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    stop_containers
    start_containers
    
    log "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
}

# –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
full_update() {
    log "üöÄ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
    
    check_dependencies
    update_code
    stop_containers
    build_containers
    start_containers
    
    log "‚úÖ –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    sleep 3
    show_status
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
show_status() {
    log "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    
    cd "$PROJECT_DIR"
    docker-compose -f "$DOCKER_COMPOSE_FILE" ps
    
    echo ""
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook
    echo -n "Webhook —Å–µ—Ä–≤–µ—Ä: "
    if curl -s "https://yapomogu55.okdesk.ru:3000/health" > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–∞
    echo -n "Telegram –±–æ—Ç: "
    if docker logs "$BOT_CONTAINER" --tail 5 2>/dev/null | grep -q "Start polling"; then
        echo -e "${GREEN}‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "${RED}‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
show_logs() {
    local service="$1"
    local lines="${2:-50}"
    
    cd "$PROJECT_DIR"
    
    if [ -z "$service" ]; then
        log "üìã –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ $lines —Å—Ç—Ä–æ–∫):"
        docker-compose -f "$DOCKER_COMPOSE_FILE" logs --tail="$lines"
    else
        log "üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞ $service (–ø–æ—Å–ª–µ–¥–Ω–∏–µ $lines —Å—Ç—Ä–æ–∫):"
        docker-compose -f "$DOCKER_COMPOSE_FILE" logs --tail="$lines" "$service"
    fi
}

# –°–ª–µ–¥–∏—Ç—å –∑–∞ –ª–æ–≥–∞–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
follow_logs() {
    local service="$1"
    
    cd "$PROJECT_DIR"
    
    if [ -z "$service" ]; then
        log "üìã –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
        docker-compose -f "$DOCKER_COMPOSE_FILE" logs -f
    else
        log "üìã –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤ —Å–µ—Ä–≤–∏—Å–∞ $service..."
        docker-compose -f "$DOCKER_COMPOSE_FILE" logs -f "$service"
    fi
}

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
diagnose() {
    log "üîç –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏..."
    
    echo ""
    echo -e "${PURPLE}=== –°–ò–°–¢–ï–ú–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø ===${NC}"
    echo "–î–∞—Ç–∞: $(date)"
    echo "Uptime: $(uptime)"
    echo "–ú–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ:"
    df -h "$PROJECT_DIR"
    
    echo ""
    echo -e "${PURPLE}=== DOCKER –ò–ù–§–û–†–ú–ê–¶–ò–Ø ===${NC}"
    echo "Docker –≤–µ—Ä—Å–∏—è: $(docker --version)"
    echo "Docker Compose –≤–µ—Ä—Å–∏—è: $(docker-compose --version)"
    echo "–ó–∞–ø—É—â–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
    docker ps --filter "name=okdesk_bot"
    
    echo ""
    echo -e "${PURPLE}=== –°–¢–ê–¢–£–° –°–ï–†–í–ò–°–û–í ===${NC}"
    show_status
    
    echo ""
    echo -e "${PURPLE}=== –ü–†–û–í–ï–†–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ô ===${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Okdesk API
    echo -n "Okdesk API: "
    if curl -s "https://yapomogu55.okdesk.ru/api/v1/companies?api_token=4cf96e5bb33f06481e4aff5ff0a2aa740ce8490a" > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook
    echo -n "Webhook endpoint: "
    if curl -s "https://yapomogu55.okdesk.ru:3000/okdesk-webhook" -X POST -H "Content-Type: application/json" -d '{"test": true}' > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
    
    echo ""
    echo -e "${PURPLE}=== –û–®–ò–ë–ö–ò –í –õ–û–ì–ê–• ===${NC}"
    if docker logs "$BOT_CONTAINER" --tail 100 2>/dev/null | grep -i error; then
        warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö –±–æ—Ç–∞"
    else
        log "–û—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
    
    if docker logs "$WEBHOOK_CONTAINER" --tail 100 2>/dev/null | grep -i error; then
        warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö webhook"
    else
        log "–û—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö webhook –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
    
    echo ""
    echo -e "${PURPLE}=== –ë–ê–ó–ê –î–ê–ù–ù–´–• ===${NC}"
    echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ:"
    docker exec "$BOT_CONTAINER" sqlite3 /app/data/okdesk_bot.db \
        "SELECT COUNT(*) as total_users, 
                SUM(CASE WHEN is_registered = 1 THEN 1 ELSE 0 END) as registered_users 
         FROM users;" 2>/dev/null || echo "–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    
    echo "–ó–∞—è–≤–∫–∏ –≤ –±–∞–∑–µ:"
    docker exec "$BOT_CONTAINER" sqlite3 /app/data/okdesk_bot.db \
        "SELECT COUNT(*) as total_issues FROM issues;" 2>/dev/null || echo "–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
}

# –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
test_comment() {
    log "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è..."
    
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–µ—Ä–≤–æ–π –∑–∞—è–≤–∫–∏
    local issue_id=$(curl -s "https://yapomogu55.okdesk.ru/api/v1/issues?limit=1&api_token=4cf96e5bb33f06481e4aff5ff0a2aa740ce8490a" | \
                     python3 -c "import sys, json; data=json.load(sys.stdin); print(data[0]['id'] if data else '')" 2>/dev/null)
    
    if [ -n "$issue_id" ]; then
        log "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ –∑–∞—è–≤–∫–µ #$issue_id..."
        
        curl -X POST "https://yapomogu55.okdesk.ru/api/v1/issues/$issue_id/comments?api_token=4cf96e5bb33f06481e4aff5ff0a2aa740ce8490a" \
             -H "Content-Type: application/json" \
             -d '{
                 "content": "**–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞**\n\n–í—Ä–µ–º—è: '$(date)'",
                 "public": true,
                 "author_id": 1
             }'
        echo ""
        log "‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å–æ–∑–¥–∞–Ω"
    else
        error "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∑–∞—è–≤–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
    fi
}

# –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
backup_database() {
    log "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    local backup_dir="/opt/okdesk_bot/backups"
    local backup_file="$backup_dir/okdesk_bot_$(date +%Y%m%d_%H%M%S).db"
    
    mkdir -p "$backup_dir"
    
    docker cp "$BOT_CONTAINER:/app/data/okdesk_bot.db" "$backup_file"
    
    log "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: $backup_file"
}

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤ Docker
cleanup_logs() {
    log "üßπ –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ Docker..."
    
    docker system prune -f
    
    log "‚úÖ –õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã"
}

# –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
show_help() {
    echo -e "${CYAN}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê]${NC}"
    echo ""
    echo -e "${YELLOW}–û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´:${NC}"
    echo "  update      - –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–∫–æ–¥ + –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫)"
    echo "  start       - –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo "  stop        - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo "  restart     - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo "  status      - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo ""
    echo -e "${YELLOW}–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:${NC}"
    echo "  diagnose    - –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
    echo "  logs [srv]  - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ (all|okdesk_bot|okdesk_webhook)"
    echo "  follow [srv]- –°–ª–µ–¥–∏—Ç—å –∑–∞ –ª–æ–≥–∞–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo "  test        - –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"
    echo ""
    echo -e "${YELLOW}–û–ë–°–õ–£–ñ–ò–í–ê–ù–ò–ï:${NC}"
    echo "  backup      - –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    echo "  cleanup     - –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ Docker"
    echo "  build       - –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo ""
    echo -e "${YELLOW}–ü–†–ò–ú–ï–†–´:${NC}"
    echo "  $0 update              # –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
    echo "  $0 logs okdesk_bot     # –õ–æ–≥–∏ —Ç–æ–ª—å–∫–æ –±–æ—Ç–∞"
    echo "  $0 follow okdesk_webhook # –°–ª–µ–¥–∏—Ç—å –∑–∞ –ª–æ–≥–∞–º–∏ webhook"
    echo "  $0 diagnose            # –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-help}" in
    "update")
        full_update
        ;;
    "start")
        start_containers
        ;;
    "stop")
        stop_containers
        ;;
    "restart")
        restart_containers
        ;;
    "status")
        show_status
        ;;
    "logs")
        show_logs "$2" "$3"
        ;;
    "follow")
        follow_logs "$2"
        ;;
    "diagnose")
        diagnose
        ;;
    "test")
        test_comment
        ;;
    "backup")
        backup_database
        ;;
    "cleanup")
        cleanup_logs
        ;;
    "build")
        build_containers
        ;;
    "help"|*)
        show_help
        ;;
esac
