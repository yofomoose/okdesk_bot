#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ API –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
"""

import asyncio
import sys
import os
import logging

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.DEBUG, format='%(levelname)s:%(name)s:%(message)s')

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from services.okdesk_api import OkdeskAPI

async def debug_contacts_api():
    """–û—Ç–ª–∞–¥–∫–∞ API –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
    
    print("üîß –û—Ç–ª–∞–¥–∫–∞ API –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤...")
    
    okdesk_api = OkdeskAPI()
    
    try:
        # –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ API –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        print("üì° –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ /contacts...")
        response = await okdesk_api._make_request('GET', '/contacts')
        print(f"   –û—Ç–≤–µ—Ç: {response}")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ endpoints
        endpoints = [
            '/contacts',
            '/contacts?limit=10',
            '/api/v1/contacts',
        ]
        
        for endpoint in endpoints:
            print(f"\nüì° –ü—Ä–æ–±—É–µ–º endpoint: {endpoint}")
            try:
                response = await okdesk_api._make_request('GET', endpoint)
                print(f"   –°—Ç–∞—Ç—É—Å: –£—Å–ø–µ—Ö")
                print(f"   –¢–∏–ø –æ—Ç–≤–µ—Ç–∞: {type(response)}")
                if isinstance(response, dict):
                    print(f"   –ö–ª—é—á–∏: {list(response.keys())}")
                elif isinstance(response, list):
                    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(response)}")
                print(f"   –î–∞–Ω–Ω—ã–µ: {response}")
            except Exception as e:
                print(f"   –û—à–∏–±–∫–∞: {e}")
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        
    finally:
        await okdesk_api.close()

if __name__ == "__main__":
    asyncio.run(debug_contacts_api())
