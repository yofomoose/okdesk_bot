#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞—è–≤–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
"""

import asyncio
from services.okdesk_api import OkdeskAPI

async def main():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞—è–≤–∫–∏"""
    print("üéØ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
    
    api = OkdeskAPI()
    
    try:
        # –ù–∞–π–¥–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –í–∞—Å–∏
        print("\n1Ô∏è‚É£ –ò—â–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –í–∞—Å–∏...")
        contacts = await api.get_contacts(phone="+79999999999")
        
        if not contacts:
            print("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
            
        contact = contacts[0]
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–∞–∫—Ç: {contact['first_name']} {contact['last_name']} (ID: {contact['id']})")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É
        print("\n2Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É...")
        issue_data = {
            'title': '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤',
            'description': '–≠—Ç–∞ –∑–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö —á–µ—Ä–µ–∑ webhook.',
            'contact_id': contact['id']
        }
        
        issue = await api.create_issue(**issue_data)
        
        if issue and 'id' in issue:
            print(f"‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(f"   üé´ ID –∑–∞—è–≤–∫–∏: {issue['id']}")
            print(f"   üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {issue.get('title', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
            print(f"   üë§ –ö–æ–Ω—Ç–∞–∫—Ç: {contact['first_name']} {contact['last_name']}")
            
            print(f"\nüîó –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:")
            print(f"   1. –ó–∞–π—Ç–∏ –≤ Okdesk")
            print(f"   2. –ù–∞–π—Ç–∏ –∑–∞—è–≤–∫—É #{issue['id']}")
            print(f"   3. –î–æ–±–∞–≤–∏—Ç—å –∫ –Ω–µ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π")
            print(f"   4. Webhook —Å–µ—Ä–≤–µ—Ä –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!")
            
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É")
            print(f"–û—Ç–≤–µ—Ç API: {issue}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        await api.close()

if __name__ == "__main__":
    asyncio.run(main())
