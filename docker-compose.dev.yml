version: '3.8'

# Docker Compose для режима разработки
# Использование: docker-compose -f docker-compose.dev.yml up

services:
  # Telegram Bot (режим разработки)
  bot:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: okdesk_bot_dev
    command: python bot.py
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - OKDESK_API_URL=${OKDESK_API_URL}
      - OKDESK_API_TOKEN=${OKDESK_API_TOKEN}
      - OKDESK_PORTAL_URL=${OKDESK_PORTAL_URL}
      - DATABASE_URL=sqlite:////app/data/okdesk_bot.db
      - WEBHOOK_URL=${WEBHOOK_URL}
      - WEBHOOK_PATH=/okdesk-webhook
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
      - PYTHONPATH=/app
    volumes:
      # Монтируем исходный код для hot reload
      - .:/app:rw
      - ./data:/app/data:rw
      - ./logs:/app/logs:rw
      # Исключаем node_modules и другие ненужные директории
      - /app/__pycache__
      - /app/*.pyc
      - /app/.git
    restart: unless-stopped
    depends_on:
      - webhook
    networks:
      - okdesk_network
    # Отключаем healthcheck в режиме разработки для скорости
    healthcheck:
      disable: true

  # Webhook Server (режим разработки)
  webhook:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: okdesk_webhook_dev
    command: python webhook_server.py
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - OKDESK_API_URL=${OKDESK_API_URL}
      - OKDESK_API_TOKEN=${OKDESK_API_TOKEN}
      - OKDESK_PORTAL_URL=${OKDESK_PORTAL_URL}
      - DATABASE_URL=sqlite:////app/data/okdesk_bot.db
      - WEBHOOK_URL=${WEBHOOK_URL}
      - WEBHOOK_PATH=/okdesk-webhook
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
      - HOST=0.0.0.0
      - PORT=8000
      - PYTHONPATH=/app
    ports:
      - "8000:8000"
    volumes:
      # Монтируем исходный код для hot reload
      - .:/app:rw
      - ./data:/app/data:rw
      - ./logs:/app/logs:rw
      # Исключаем ненужные файлы
      - /app/__pycache__
      - /app/*.pyc
      - /app/.git
    restart: unless-stopped
    networks:
      - okdesk_network
    # Отключаем healthcheck в режиме разработки
    healthcheck:
      disable: true

networks:
  okdesk_network:
    driver: bridge