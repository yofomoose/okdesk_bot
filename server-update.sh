#!/bin/bash

# üöÄ –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Okdesk Bot –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./server-update.sh [rebuild]

set -e

echo "üöÄ –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Okdesk Bot –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
echo "==========================================="

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
RESET='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%H:%M:%S')] $1${RESET}"
}

error() {
    echo -e "${RED}[ERROR] $1${RESET}"
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${RESET}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_deps() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    command -v docker >/dev/null 2>&1 || { error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"; exit 1; }
    command -v docker-compose >/dev/null 2>&1 || { error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"; exit 1; }
    log "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ OK"
}

# –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
backup() {
    if [ -f "./data/okdesk_bot.db" ]; then
        log "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
        cp ./data/okdesk_bot.db "./data/backup_$(date +%Y%m%d_%H%M%S).db"
        log "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞"
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
update_code() {
    log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ Git..."
    git pull origin master
    log "‚úÖ –ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω"
}

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞
rebuild() {
    local no_cache=$1
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose down

    if [ "$no_cache" = "true" ]; then
        log "–ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ (–±–µ–∑ –∫—ç—à–∞)..."
        docker-compose build --no-cache
    else
        log "–ë—ã—Å—Ç—Ä–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ (—Å –∫—ç—à–µ–º)..."
        docker-compose build
    fi
}

# –ó–∞–ø—É—Å–∫
start() {
    log "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose up -d
    sleep 5
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞
check() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."

    if docker-compose ps | grep -q "Up"; then
        log "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"

        if curl -s http://localhost:8000/ >/dev/null 2>&1; then
            log "‚úÖ Webhook –¥–æ—Å—Ç—É–ø–µ–Ω"
        else
            warning "‚ö†Ô∏è Webhook –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
    else
        error "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
        exit 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local rebuild=$1

    check_deps
    backup
    update_code
    rebuild "$rebuild"
    start
    check

    echo ""
    log "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    echo "üìä –°—Ç–∞—Ç—É—Å: docker-compose ps"
    echo "üìã –õ–æ–≥–∏: docker-compose logs --tail=20"
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "$1" in
    "rebuild"|"-r"|"--rebuild")
        main "true"
        ;;
    "help"|"-h"|"--help")
        echo "–ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Okdesk Bot"
        echo ""
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [rebuild]"
        echo ""
        echo "rebuild    - –ø–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –±–µ–∑ –∫—ç—à–∞"
        echo ""
        echo "–ü—Ä–∏–º–µ—Ä—ã:"
        echo "  $0          # –±—ã—Å—Ç—Ä–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Å –∫—ç—à–µ–º"
        echo "  $0 rebuild  # –ø–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞"
        ;;
    *)
        main "false"
        ;;
esac