#!/bin/bash

# üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å readonly –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö SQLite
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./diagnose-db.sh

echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å readonly –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"
echo "=============================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RESET='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%H:%M:%S')] $1${RESET}"
}

error() {
    echo -e "${RED}[ERROR] $1${RESET}"
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${RESET}"
}

info() {
    echo -e "${BLUE}[INFO] $1${RESET}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
check_db_file() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."

    if [ -f "./data/okdesk_bot.db" ]; then
        log "‚úÖ –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        ls -la ./data/okdesk_bot.db
    else
        warning "‚ö†Ô∏è –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
check_permissions() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."

    if [ -f "./data/okdesk_bot.db" ]; then
        PERMS=$(stat -c "%a %U:%G" ./data/okdesk_bot.db 2>/dev/null || echo "stat –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å
        if [ -w "./data/okdesk_bot.db" ]; then
            log "‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å: OK"
        else
            error "‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
            echo "–¢–µ–∫—É—â–∏–µ –ø—Ä–∞–≤–∞: $PERMS"
            return 1
        fi

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        if [ -w "./data" ]; then
            log "‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: OK"
        else
            error "‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é ./data"
            ls -ld ./data
            return 1
        fi
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
check_docker() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."

    if command -v docker &> /dev/null; then
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        RUNNING=$(docker ps --filter "name=okdesk" --format "{{.Names}}" | wc -l)
        if [ "$RUNNING" -gt 0 ]; then
            log "‚úÖ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã: $RUNNING"
            docker ps --filter "name=okdesk" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
        else
            warning "‚ö†Ô∏è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
        fi

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ volumes
        log "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker volumes..."
        docker volume ls | grep -E "(okdesk|data)" || warning "–ù–µ –Ω–∞–π–¥–µ–Ω—ã volumes —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø—Ä–æ–µ–∫—Ç–æ–º"
    else
        warning "‚ö†Ô∏è Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SQLite —Ñ–∞–π–ª–∞
check_sqlite() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ SQLite —Ñ–∞–π–ª–∞..."

    if [ -f "./data/okdesk_bot.db" ]; then
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
        SIZE=$(stat -c%s "./data/okdesk_bot.db" 2>/dev/null || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        log "–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${SIZE} –±–∞–π—Ç"

        # –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
        if command -v sqlite3 &> /dev/null; then
            log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SQLite –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
            if sqlite3 ./data/okdesk_bot.db "SELECT COUNT(*) FROM sqlite_master;" >/dev/null 2>&1; then
                log "‚úÖ SQLite –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: OK"

                # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã
                TABLES=$(sqlite3 ./data/okdesk_bot.db ".tables")
                log "–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã: $TABLES"

                # –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
                for table in $TABLES; do
                    COUNT=$(sqlite3 ./data/okdesk_bot.db "SELECT COUNT(*) FROM $table;")
                    info "–¢–∞–±–ª–∏—Ü–∞ $table: $COUNT –∑–∞–ø–∏—Å–µ–π"
                done
            else
                error "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ SQLite"
                return 1
            fi
        else
            warning "‚ö†Ô∏è sqlite3 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç"
        fi
    fi
}

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º
fix_issues() {
    log "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º..."

    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    if [ -f "./data/okdesk_bot.db" ]; then
        log "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
        chmod 666 ./data/okdesk_bot.db
        log "‚úÖ –ü—Ä–∞–≤–∞ —Ñ–∞–π–ª–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"

        log "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
        chmod 755 ./data
        log "‚úÖ –ü—Ä–∞–≤–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
    fi

    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -d "./data" ]; then
        log "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ./data..."
        mkdir -p ./data
        chmod 755 ./data
        log "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞"
    fi

    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ —Ñ–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω
    if [ ! -f "./data/okdesk_bot.db" ] || [ ! -s "./data/okdesk_bot.db" ]; then
        log "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
        if command -v sqlite3 &> /dev/null; then
            sqlite3 ./data/okdesk_bot.db ".read schema.sql" 2>/dev/null || {
                # –ï—Å–ª–∏ –Ω–µ—Ç schema.sql, —Å–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                sqlite3 ./data/okdesk_bot.db << 'EOF'
CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY,
    telegram_id INTEGER UNIQUE,
    username TEXT,
    user_type TEXT,
    full_name TEXT,
    phone TEXT,
    contact_auth_code TEXT,
    okdesk_contact_id INTEGER,
    inn_company TEXT,
    company_id INTEGER,
    company_name TEXT,
    is_registered BOOLEAN DEFAULT 0,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS issues (
    id INTEGER PRIMARY KEY,
    telegram_user_id INTEGER,
    okdesk_issue_id INTEGER,
    title TEXT,
    description TEXT,
    status TEXT,
    priority TEXT,
    okdesk_url TEXT,
    issue_number TEXT,
    rating INTEGER,
    rating_comment TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS comments (
    id INTEGER PRIMARY KEY,
    issue_id INTEGER,
    okdesk_comment_id INTEGER,
    telegram_user_id INTEGER,
    content TEXT,
    is_from_okdesk BOOLEAN DEFAULT 0,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
EOF
            }
            chmod 666 ./data/okdesk_bot.db
            log "‚úÖ –ù–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞"
        fi
    fi
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
restart_services() {
    log "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker —Å–µ—Ä–≤–∏—Å–æ–≤..."

    if command -v docker-compose &> /dev/null; then
        docker-compose down
        sleep 2
        docker-compose up -d
        sleep 5

        if docker-compose ps | grep -q "Up"; then
            log "‚úÖ –°–µ—Ä–≤–∏—Å—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
        else
            error "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
        fi
    else
        warning "‚ö†Ô∏è docker-compose –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo ""
    check_db_file
    echo ""
    check_permissions
    echo ""
    check_docker
    echo ""
    check_sqlite
    echo ""

    # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
    echo "üîß –í–æ–∑–º–æ–∂–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
    echo "1. –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞"
    echo "2. –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
    echo "3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã"
    echo ""

    read -p "–•–æ—Ç–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        fix_issues
        echo ""
        read -p "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã? (y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            restart_services
        fi
    fi

    echo ""
    log "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
main "$@"