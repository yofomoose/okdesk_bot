#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è service_object_name –≤ —Ç–∞–±–ª–∏—Ü—É users
–ó–∞–ø—É—Å–∫: python add_service_object_migration.py
"""

import sys
import os
from sqlalchemy import create_engine, text

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import config

def add_service_object_column():
    """–î–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–æ–Ω–∫—É service_object_name –≤ —Ç–∞–±–ª–∏—Ü—É users"""
    try:
        # –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        engine = create_engine(config.DATABASE_URL, echo=True)

        with engine.connect() as conn:
            # –î–ª—è SQLite –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ-–¥—Ä—É–≥–æ–º—É
            result = conn.execute(text("""
                PRAGMA table_info(users)
            """))

            columns = [row[1] for row in result.fetchall()]  # column[1] - —ç—Ç–æ –∏–º—è –∫–æ–ª–æ–Ω–∫–∏

            if 'service_object_name' in columns:
                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ service_object_name —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                return True

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É –¥–ª—è SQLite
            print("üîÑ –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É service_object_name...")
            conn.execute(text("""
                ALTER TABLE users ADD COLUMN service_object_name TEXT
            """))

            conn.commit()
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ service_object_name —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–ª–æ–Ω–∫–∏: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è service_object_name...")
    success = add_service_object_column()
    if success:
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    else:
        print("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
        sys.exit(1)